package kz.bee.bip.syncchannel.v10.interfaces.binding2;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;
import kz.bee.bip.syncchannel.v10.interfaces.ISyncChannel;

/**
 * This class was generated by Apache CXF 4.0.3
 * 2024-02-28T14:28:52.638+06:00
 * Generated source version: 4.0.3
 *
 */
@WebServiceClient(name = "ISyncChannelHttpService",
                  wsdlLocation = "file:/Volumes/Dis/projects/otus/lessons/esb-isna-integration/src/main/resources/wsdl/SyncChannel/v10/Interfaces/SyncChannelHttp_Service.wsdl",
                  targetNamespace = "http://bip.bee.kz/SyncChannel/v10/Interfaces/Binding2")
public class ISyncChannelHttpService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://bip.bee.kz/SyncChannel/v10/Interfaces/Binding2", "ISyncChannelHttpService");
    public final static QName SyncChannelHttpPort = new QName("http://bip.bee.kz/SyncChannel/v10/Interfaces/Binding2", "SyncChannelHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Volumes/Dis/projects/otus/lessons/esb-isna-integration/src/main/resources/wsdl/SyncChannel/v10/Interfaces/SyncChannelHttp_Service.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ISyncChannelHttpService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Volumes/Dis/projects/otus/lessons/esb-isna-integration/src/main/resources/wsdl/SyncChannel/v10/Interfaces/SyncChannelHttp_Service.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ISyncChannelHttpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ISyncChannelHttpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ISyncChannelHttpService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ISyncChannelHttpService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ISyncChannelHttpService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ISyncChannelHttpService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ISyncChannel
     */
    @WebEndpoint(name = "SyncChannelHttpPort")
    public ISyncChannel getSyncChannelHttpPort() {
        return super.getPort(SyncChannelHttpPort, ISyncChannel.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISyncChannel
     */
    @WebEndpoint(name = "SyncChannelHttpPort")
    public ISyncChannel getSyncChannelHttpPort(WebServiceFeature... features) {
        return super.getPort(SyncChannelHttpPort, ISyncChannel.class, features);
    }

}
